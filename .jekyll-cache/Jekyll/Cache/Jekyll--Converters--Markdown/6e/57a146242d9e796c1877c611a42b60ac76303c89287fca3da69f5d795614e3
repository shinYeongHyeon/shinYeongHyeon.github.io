I"I<p>TypeScript 를 사용할 때, 들어오는 인자 중 Object 가 any 인 경우들이 있는데, 이것들이 interface 로 정의를 하고 싶을때가 있다.
아니면 정의하는 척이라도 ~any는 보기 좀 그래..~
그럴 때 사용할 수 있는 것이 Indexable 이다.
코드부터 보고 시작하자.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">interface</span> <span class="nx">Indexable</span> <span class="p">{</span>
  <span class="p">[</span><span class="nx">key</span><span class="p">:</span> <span class="nx">string</span><span class="p">]:</span> <span class="nx">any</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>~결국은 any..~
test 의 depth1 의 depth2 의 depth3 에 접근하려면, 일단 test 있는지, 있다면 그 안에 depth1 이 있는지 …. 계속 해나가야 한다.
근데 이것을 한번에 아름답게 해결해줄 수 있는 것이 <em>Optional Chaining</em> 이다.
있는지 확인하고 싶은 것을 dot(.) 으로 연결하기 전에 <em>?</em> 만 붙여주면 끝.
거두절미하고 아래 스크린 샷을 보면 이해 될 것이다.
단 데이터가 없는 경우 <em>undefined</em> 로 리턴이 오니 참고할 것!</p>

<p><del>아름다워</del></p>

<p><img src="/assets/optionalchaning.png" alt="" /></p>

<p>MDN : <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Optional_chaining">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Optional_chaining</a></p>
:ET